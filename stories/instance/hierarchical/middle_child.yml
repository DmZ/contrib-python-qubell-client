# 3-level hierarchical application
# This is middle level
# Here we have workflow and link to child
# We pass to parent own output and child's output

application:
  interfaces:
    middle_child_in:
      app_input: bind(middle_child#input.in)
    middle_child_out:
      app_output: bind(middle_child#result.out)
      child_output: bind(middle_child#result.own)
    middle_actions:
      update: bind(middle_child#actions.update)

    last_child_in:
      app_input: bind(last_child#child_in.app_input)
    last_child_out:
      app_output: bind(last_child#child_out.app_output)
      child_output: bind(last_child#child_out.child_output)
    last_actions:
      update: bind(last_child#actions.update)



  bindings:
    - [middle_child, genesis]

  configuration:
    middle_child_in.app_input: "middle-Dummy"
    last_child_in.app_input: "middle-Dummy for last"

  components:
    last_child:
      type: reference.Submodule
      configuration:
        # Put here appid of child.yml
        __locator.application-id: "child"

      interfaces:
        child_in:
          app_input: configuration(string)
        child_out:
          app_output: publish-signal(string)
          child_output: publish-signal(string)
        actions:
          update: receive-command(=> string own)


    middle_child:
      type: workflow.Instance
      interfaces:
        input:
          in: configuration(string)
        result:
          out: publish-signal(string)
          own: publish-signal(string)
        actions:
          update: receive-command(=> string own)

      configuration:
        configuration.triggers: {}
        configuration.workflows:
          launch:
            steps: []
            return:
              out:
                value: ${in}
              own:
                value: "Greetings from middle child"
          update:
            steps: []
            return:
              own:
                value: "middle child Update launched"

          destroy:
            steps: []

    genesis:
      type: reference.Service
      interfaces:
        executor:
          execute-workflow: receive-command(object request => object status => object status)
          execute-command:  send-command(string interface, string command, map<string, object> arguments => map<string, object> response => map<string, object> response)
