application:
  interfaces:
    in:
      app_input: bind(wfapp#input.in)
      app_trigger: bind(wfapp#input.trig)
    out:
      app_output: bind(wfapp#result.out)
    action:
      gogogo: bind(wfapp#actions.gogo)


  bindings:
    - [wfapp, genesis]

  configuration:
    in.app_input: "Hello from BASE WORKFLOW manifest"
    in.app_trigger: "NOT UPDATED"


  components:
    genesis:
      type: reference.Service
      interfaces:
        executor:
          execute-workflow: receive-command(object request => object status => object status)
          execute-command: send-command(string interface, string command, map<string, object> arguments => map<string, object> response => map<string, object> response)

    wfapp:
      type: workflow.Instance
      interfaces:
        input:
          in: configuration(string)
          trig: configuration(string)
        result:
          out: publish-signal(string)
        actions:
          gogo: receive-command()

      configuration:
        configuration.triggers:
          input.trig: update
        configuration.workflows:
          launch:
            steps: []
            return:
              out:
                value: ${in}
          update:
            steps: []
            return:
              out:
                value: "UPDATED by update workflow"
          gogo:
            steps: []
            return:
              out:
                value: "Action GOGO launched"

          destroy:
            steps: []
