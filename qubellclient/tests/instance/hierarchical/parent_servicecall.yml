# Parent manifest for hierarchical app with servicecall to child

application:
  configuration:
    parent_in.input: "This string travels from main to child and back"

  interfaces:
    parent_in:
      input: bind(main.runner#input.in)
    parent_out:
      child_workflow_status: bind(main.runner#result.out)
      main_workflow_status: bind(main.runner#result.own)
    actions:
      child_servicecall: bind(main.runner#actions.scall)

  bindings:
    - [main.runner, child]

  components:
    child:
      type: reference.Submodule
      configuration:
        # Put here appid of child.yml
        __locator.application-id: "child"

      interfaces:
        child_in:
          app_input: configuration(string)
        child_out:
          app_output: publish-signal(string)
          child_output: publish-signal(string)
        actions:
          update: receive-command(=> string own)

    main:
      bindings:
        - [wfService, runner]
      components:
        wfService:
          type: reference.Service
          interfaces:
            executor:
              execute-workflow: receive-command(object request => object status => object status)
              execute-command: send-command(string interface, string command, map<string, object> arguments => map<string, object> response => map<string, object> response)

        runner:
          type: workflow.Instance
          interfaces:
            input:
              in: configuration(string)
            result:
              out: publish-signal(string)
              own: publish-signal(string)
            child:
              app_output: consume-signal(string)
              child_output: consume-signal(string)
            actions:
              scall: receive-command(=> string own)
            child_actions:
              update: send-command(=> string own)

          configuration:
            configuration.triggers: {}
            input.in: "Some value"
            configuration.workflows:
              launch:
                steps: []
                return:
                  out:
                    value: ${in}
                  own:
                    value: "Main Launch launched"

              scall:
                steps:
                  - run-child-action:
                        action: serviceCall
                        parameters:
                          service: child_actions
                          command: update
                          arguments: {}
                          ignoreFail: False
                        output:
                          results: result
                return:
                  out:
                    value: "{$.results}"
                  own:
                    value: "Main Scall launched"

              destroy:
                steps: []
                return:
                  own:
                    value: "Main Destroy launched"
